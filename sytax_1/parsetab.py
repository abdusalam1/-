
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDOP ADDOP ARRAY ASSIGNOP BEGIN BOOLEAN CASE CHAR COLON COM COMMENT CONST DIGITS DO DOT DOWNTO ELSE END EQUAL FALSE FOR FUNCTION ID IF INTEGER LBRACKET LETTERS LPAREN MULOP MULOP MULOP MULOP NOT NUM OF POINT PROCEDURE PROGRAM RBRACKET READ READIN REAL RECORD RELOP REPEAT RPAREN SEMICOLON THEN TO TRUE TYPE UNTIL VAR WHILE WRITE WRITEINpascal : programstructprogramstruct : program_head SEMICOLON program_body POINTprogram_head : PROGRAM ID LPAREN idlist RPAREN program_head :  PROGRAM IDprogram_body : const_declarations  var_declarations  subprogram_declarations compound_statementempty :idlist : ID idlist : idlist COM IDconst_declarations : emptyconst_declarations :  CONST const_declaration SEMICOLONconst_declaration : ID EQUAL const_value const_declaration : const_declaration SEMICOLON ID EQUAL const_valueconst_value : ADDOP num const_value :  num const_value :  LETTERS num : DIGITS fraction num :  DIGITSfraction : POINT DIGITSvar_declarations : VAR  var_declaration SEMICOLONvar_declarations : empty var_declaration : idlist COLON typevar_declaration : var_declaration SEMICOLON idlist COLON typetype : basic_type type :  ARRAY LBRACKET period RBRACKET OF basic_typebasic_type : INTEGERbasic_type :  REAL basic_type : BOOLEAN basic_type : CHARperiod : DIGITS DOT DIGITS period : period COM DIGITS DOT DIGITSsubprogram_declarations : subprogram_declarations subprogram SEMICOLON subprogram_declarations : empty subprogram : subprogram_head SEMICOLON subprogram_bodysubprogram_head : PROCEDURE ID formal_parametersubprogram_head :  FUNCTION ID formal_parameter COLON basic_typeformal_parameter : LPAREN parameter_list RPARENformal_parameter : emptyparameter_list : parameterparameter_list : parameter_list SEMICOLON parameterparameter : var_parameterparameter : value_parametervar_parameter : VAR value_parametervalue_parameter : idlist COLON basic_typesubprogram_body : const_declarations var_declarations  compound_statementcompound_statement : BEGIN statement_list ENDstatement_list : statementstatement_list :  statement_list SEMICOLON statementstatement : emptystatement : variable ASSIGNOP expressionstatement : func_id ASSIGNOP expressionfunc_id : IDstatement : procedure_callstatement : compound_statementstatement : IF expression THEN statement else_partstatement : FOR ID ASSIGNOP expression TO expression DO statementstatement : READ LPAREN variable_list RPARENstatement : WRITE LPAREN expression_list RPARENvariable_list : variablevariable_list : variable_list COM variablevariable : ID id_varpartid_varpart : emptyid_varpart : LBRACKET expression_list RBRACKETprocedure_call : IDprocedure_call : ID LPAREN expression_list RPARENelse_part : ELSE statementelse_part : empty expression_list : expressionexpression_list : expression_list COM expressionexpression : simple_expressionexpression : simple_expression RELOP simple_expressionsimple_expression : termsimple_expression : simple_expression ADDOP termterm : factorterm : term MULOP factorfactor : numfactor : variablefactor : LPAREN expression RPARENfactor : ID LPAREN expression_list RPARENfactor : NOT factorfactor : ADDOP factor'
    
_lr_action_items = {'PROGRAM':([0,],[4,]),'$end':([1,2,12,],[0,-1,-2,]),'SEMICOLON':([3,6,16,22,26,29,30,31,37,39,40,41,44,45,46,49,50,53,57,60,61,63,64,65,66,68,69,71,72,76,77,79,80,81,83,86,88,92,94,96,100,101,102,103,104,105,109,112,122,123,124,125,129,132,133,134,135,136,139,141,142,144,145,146,148,150,154,155,156,157,161,162,166,168,170,172,],[5,-4,24,34,-3,43,-6,56,-11,-14,-15,-17,72,-46,-48,-52,-53,-63,-6,-21,-23,-25,-26,-27,-28,-13,-16,-45,-6,-69,-71,-73,-75,-76,-6,-60,-61,-33,-34,-37,-12,-18,-47,-49,-50,-6,-80,-79,147,-38,-40,-41,-22,-6,-70,-72,-74,-77,-64,-62,-56,-57,-44,-36,-42,-35,-54,-6,-66,-78,-39,-43,-65,-24,-6,-55,]),'ID':([4,10,11,14,24,27,30,32,33,34,51,52,72,73,74,78,82,84,87,89,90,91,95,105,106,107,108,111,113,126,140,143,147,155,158,170,],[6,17,18,18,36,42,53,57,58,18,83,85,53,83,83,83,83,83,83,83,119,83,18,53,83,83,83,83,83,18,83,119,18,53,83,53,]),'CONST':([5,56,],[10,10,]),'VAR':([5,8,9,24,56,93,95,147,],[-6,14,-9,-10,-6,14,126,126,]),'BEGIN':([5,8,9,13,15,20,21,24,30,34,43,56,72,93,105,121,155,170,],[-6,-6,-9,-6,-20,30,-32,-10,30,-19,-31,-6,30,-6,30,30,30,30,]),'PROCEDURE':([5,8,9,13,15,20,21,24,34,43,],[-6,-6,-9,-6,-20,32,-32,-10,-19,-31,]),'FUNCTION':([5,8,9,13,15,20,21,24,34,43,],[-6,-6,-9,-6,-20,33,-32,-10,-19,-31,]),'LPAREN':([6,51,53,54,55,57,58,73,74,78,82,83,84,87,89,91,106,107,108,111,113,140,158,],[11,82,87,90,91,95,95,82,82,82,82,111,82,82,82,82,82,82,82,82,82,82,82,]),'POINT':([7,28,41,71,],[12,-5,70,-45,]),'EQUAL':([17,36,],[25,67,]),'RPAREN':([18,19,41,42,63,64,65,66,69,76,77,79,80,81,83,86,88,101,109,110,112,114,115,117,118,119,120,122,123,124,125,133,134,135,136,137,141,148,157,159,160,161,162,],[-7,26,-17,-8,-25,-26,-27,-28,-16,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,136,-79,139,-67,142,-58,-6,144,146,-38,-40,-41,-70,-72,-74,-77,157,-62,-42,-78,-68,-59,-39,-43,]),'COM':([18,19,23,41,42,59,69,76,77,79,80,81,83,86,88,101,109,112,114,115,116,117,118,119,120,127,130,133,134,135,136,137,141,157,159,160,165,171,],[-7,27,27,-17,-8,27,-16,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,140,-67,140,143,-58,-6,140,27,152,-70,-72,-74,-77,140,-62,-78,-68,-59,-29,-30,]),'COLON':([18,23,42,58,59,96,97,127,146,],[-7,35,-8,-6,98,-37,128,149,-36,]),'ADDOP':([25,41,51,67,69,73,74,76,77,78,79,80,81,82,83,84,86,87,88,89,91,101,106,107,108,109,111,112,113,133,134,135,136,140,141,157,158,],[38,-17,78,38,-16,78,78,107,-71,78,-73,-75,-76,78,-6,78,-60,78,-61,78,78,-18,78,78,78,-80,78,-79,78,107,-72,-74,-77,78,-62,-78,78,]),'LETTERS':([25,67,],[40,40,]),'DIGITS':([25,38,51,67,70,73,74,78,82,84,87,89,91,99,106,107,108,111,113,140,152,153,158,169,],[41,41,41,41,101,41,41,41,41,41,41,41,41,131,41,41,41,41,41,41,164,165,41,171,]),'IF':([30,72,105,155,170,],[51,51,51,51,51,]),'FOR':([30,72,105,155,170,],[52,52,52,52,52,]),'READ':([30,72,105,155,170,],[54,54,54,54,54,]),'WRITE':([30,72,105,155,170,],[55,55,55,55,55,]),'END':([30,41,44,45,46,49,50,53,69,71,72,76,77,79,80,81,83,86,88,101,102,103,104,105,109,112,132,133,134,135,136,139,141,142,144,154,155,156,157,166,170,172,],[-6,-17,71,-46,-48,-52,-53,-63,-16,-45,-6,-69,-71,-73,-75,-76,-6,-60,-61,-18,-47,-49,-50,-6,-80,-79,-6,-70,-72,-74,-77,-64,-62,-56,-57,-54,-6,-66,-78,-65,-6,-55,]),'ARRAY':([35,98,],[62,62,]),'INTEGER':([35,98,128,149,163,],[63,63,63,63,63,]),'REAL':([35,98,128,149,163,],[64,64,64,64,64,]),'BOOLEAN':([35,98,128,149,163,],[65,65,65,65,65,]),'CHAR':([35,98,128,149,163,],[66,66,66,66,66,]),'MULOP':([41,69,77,79,80,81,83,86,88,101,109,112,134,135,136,141,157,],[-17,-16,108,-73,-75,-76,-6,-60,-61,-18,-80,-79,108,-74,-77,-62,-78,]),'RELOP':([41,69,76,77,79,80,81,83,86,88,101,109,112,134,135,136,141,157,],[-17,-16,106,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,-72,-74,-77,-62,-78,]),'THEN':([41,69,75,76,77,79,80,81,83,86,88,101,109,112,133,134,135,136,141,157,],[-17,-16,105,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,-70,-72,-74,-77,-62,-78,]),'ELSE':([41,46,49,50,53,69,71,76,77,79,80,81,83,86,88,101,103,104,105,109,112,132,133,134,135,136,139,141,142,144,154,155,156,157,166,170,172,],[-17,-48,-52,-53,-63,-16,-45,-69,-71,-73,-75,-76,-6,-60,-61,-18,-49,-50,-6,-80,-79,155,-70,-72,-74,-77,-64,-62,-56,-57,-54,-6,-66,-78,-65,-6,-55,]),'RBRACKET':([41,69,76,77,79,80,81,83,86,88,101,109,112,115,116,130,133,134,135,136,141,157,159,165,171,],[-17,-16,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,-67,141,151,-70,-72,-74,-77,-62,-78,-68,-29,-30,]),'TO':([41,69,76,77,79,80,81,83,86,88,101,109,112,133,134,135,136,138,141,157,],[-17,-16,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,-70,-72,-74,-77,158,-62,-78,]),'DO':([41,69,76,77,79,80,81,83,86,88,101,109,112,133,134,135,136,141,157,167,],[-17,-16,-69,-71,-73,-75,-76,-6,-60,-61,-18,-80,-79,-70,-72,-74,-77,-62,-78,170,]),'ASSIGNOP':([47,48,53,85,86,88,141,],[73,74,-6,113,-60,-61,-62,]),'NOT':([51,73,74,78,82,84,87,89,91,106,107,108,111,113,140,158,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LBRACKET':([53,62,83,119,],[89,99,89,89,]),'DOT':([131,164,],[153,169,]),'OF':([151,],[163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pascal':([0,],[1,]),'programstruct':([0,],[2,]),'program_head':([0,],[3,]),'program_body':([5,],[7,]),'const_declarations':([5,56,],[8,93,]),'empty':([5,8,13,30,53,56,57,58,72,83,93,105,119,132,155,170,],[9,15,21,46,88,9,96,96,46,88,15,46,88,156,46,46,]),'var_declarations':([8,93,],[13,121,]),'const_declaration':([10,],[16,]),'idlist':([11,14,34,95,126,147,],[19,23,59,127,127,127,]),'subprogram_declarations':([13,],[20,]),'var_declaration':([14,],[22,]),'compound_statement':([20,30,72,105,121,155,170,],[28,50,50,50,145,50,50,]),'subprogram':([20,],[29,]),'subprogram_head':([20,],[31,]),'const_value':([25,67,],[37,100,]),'num':([25,38,51,67,73,74,78,82,84,87,89,91,106,107,108,111,113,140,158,],[39,68,80,39,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'statement_list':([30,],[44,]),'statement':([30,72,105,155,170,],[45,102,132,166,172,]),'variable':([30,51,72,73,74,78,82,84,87,89,90,91,105,106,107,108,111,113,140,143,155,158,170,],[47,81,47,81,81,81,81,81,81,81,118,81,47,81,81,81,81,81,81,160,47,81,47,]),'func_id':([30,72,105,155,170,],[48,48,48,48,48,]),'procedure_call':([30,72,105,155,170,],[49,49,49,49,49,]),'type':([35,98,],[60,129,]),'basic_type':([35,98,128,149,163,],[61,61,150,162,168,]),'fraction':([41,],[69,]),'expression':([51,73,74,82,87,89,91,111,113,140,158,],[75,103,104,110,115,115,115,115,138,159,167,]),'simple_expression':([51,73,74,82,87,89,91,106,111,113,140,158,],[76,76,76,76,76,76,76,133,76,76,76,76,]),'term':([51,73,74,82,87,89,91,106,107,111,113,140,158,],[77,77,77,77,77,77,77,77,134,77,77,77,77,]),'factor':([51,73,74,78,82,84,87,89,91,106,107,108,111,113,140,158,],[79,79,79,109,79,112,79,79,79,79,79,135,79,79,79,79,]),'id_varpart':([53,83,119,],[86,86,86,]),'subprogram_body':([56,],[92,]),'formal_parameter':([57,58,],[94,97,]),'expression_list':([87,89,91,111,],[114,116,120,137,]),'variable_list':([90,],[117,]),'parameter_list':([95,],[122,]),'parameter':([95,147,],[123,161,]),'var_parameter':([95,147,],[124,124,]),'value_parameter':([95,126,147,],[125,148,125,]),'period':([99,],[130,]),'else_part':([132,],[154,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pascal","S'",1,None,None,None),
  ('pascal -> programstruct','pascal',1,'p_pascal_program','yacc.py',5),
  ('programstruct -> program_head SEMICOLON program_body POINT','programstruct',4,'p_programstruct','yacc.py',8),
  ('program_head -> PROGRAM ID LPAREN idlist RPAREN','program_head',5,'p_program_head','yacc.py',11),
  ('program_head -> PROGRAM ID','program_head',2,'p_program_head_jusi_id','yacc.py',14),
  ('program_body -> const_declarations var_declarations subprogram_declarations compound_statement','program_body',4,'p_program_body','yacc.py',17),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',20),
  ('idlist -> ID','idlist',1,'p_idlist','yacc.py',24),
  ('idlist -> idlist COM ID','idlist',3,'p_idlist_2','yacc.py',27),
  ('const_declarations -> empty','const_declarations',1,'p_const_declerations_empty','yacc.py',30),
  ('const_declarations -> CONST const_declaration SEMICOLON','const_declarations',3,'p_const_declerations','yacc.py',33),
  ('const_declaration -> ID EQUAL const_value','const_declaration',3,'p_const_decleration','yacc.py',37),
  ('const_declaration -> const_declaration SEMICOLON ID EQUAL const_value','const_declaration',5,'p_const_decleration_2','yacc.py',40),
  ('const_value -> ADDOP num','const_value',2,'p_const_value_addop','yacc.py',43),
  ('const_value -> num','const_value',1,'p_const_value_num','yacc.py',46),
  ('const_value -> LETTERS','const_value',1,'p_const_value_letter','yacc.py',49),
  ('num -> DIGITS fraction','num',2,'p_num_fraction','yacc.py',53),
  ('num -> DIGITS','num',1,'p_num_digit','yacc.py',56),
  ('fraction -> POINT DIGITS','fraction',2,'p_fraction','yacc.py',59),
  ('var_declarations -> VAR var_declaration SEMICOLON','var_declarations',3,'p_var_declarations','yacc.py',62),
  ('var_declarations -> empty','var_declarations',1,'p_var_declarations_empty','yacc.py',65),
  ('var_declaration -> idlist COLON type','var_declaration',3,'p_var_declaration','yacc.py',68),
  ('var_declaration -> var_declaration SEMICOLON idlist COLON type','var_declaration',5,'p_var_declaration_var','yacc.py',71),
  ('type -> basic_type','type',1,'p_type','yacc.py',74),
  ('type -> ARRAY LBRACKET period RBRACKET OF basic_type','type',6,'p_type_array','yacc.py',77),
  ('basic_type -> INTEGER','basic_type',1,'p_basic_type_integer','yacc.py',80),
  ('basic_type -> REAL','basic_type',1,'p_basic_type_real','yacc.py',83),
  ('basic_type -> BOOLEAN','basic_type',1,'p_basic_type_boolean','yacc.py',86),
  ('basic_type -> CHAR','basic_type',1,'p_basic_type_char','yacc.py',89),
  ('period -> DIGITS DOT DIGITS','period',3,'p_period','yacc.py',92),
  ('period -> period COM DIGITS DOT DIGITS','period',5,'p_period_2','yacc.py',95),
  ('subprogram_declarations -> subprogram_declarations subprogram SEMICOLON','subprogram_declarations',3,'p_subprogram_declarations','yacc.py',98),
  ('subprogram_declarations -> empty','subprogram_declarations',1,'p_subprogram_declarations_empty','yacc.py',101),
  ('subprogram -> subprogram_head SEMICOLON subprogram_body','subprogram',3,'p_subprogram','yacc.py',104),
  ('subprogram_head -> PROCEDURE ID formal_parameter','subprogram_head',3,'p_subprogram_head_procedure','yacc.py',107),
  ('subprogram_head -> FUNCTION ID formal_parameter COLON basic_type','subprogram_head',5,'p_subprogram_head_function','yacc.py',110),
  ('formal_parameter -> LPAREN parameter_list RPAREN','formal_parameter',3,'p_formal_parameter','yacc.py',113),
  ('formal_parameter -> empty','formal_parameter',1,'p_formal_parameter_empty','yacc.py',116),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','yacc.py',120),
  ('parameter_list -> parameter_list SEMICOLON parameter','parameter_list',3,'p_parameter_list_2','yacc.py',123),
  ('parameter -> var_parameter','parameter',1,'p_parameter','yacc.py',126),
  ('parameter -> value_parameter','parameter',1,'p_parameter_value','yacc.py',129),
  ('var_parameter -> VAR value_parameter','var_parameter',2,'p_var_parameter','yacc.py',132),
  ('value_parameter -> idlist COLON basic_type','value_parameter',3,'p_value_parameter','yacc.py',135),
  ('subprogram_body -> const_declarations var_declarations compound_statement','subprogram_body',3,'p_subprogram_body','yacc.py',138),
  ('compound_statement -> BEGIN statement_list END','compound_statement',3,'p_compound_statement','yacc.py',141),
  ('statement_list -> statement','statement_list',1,'p_statement_list','yacc.py',145),
  ('statement_list -> statement_list SEMICOLON statement','statement_list',3,'p_statement_list_2','yacc.py',148),
  ('statement -> empty','statement',1,'p_statement_empty','yacc.py',151),
  ('statement -> variable ASSIGNOP expression','statement',3,'p_statement_variable_assign','yacc.py',155),
  ('statement -> func_id ASSIGNOP expression','statement',3,'p_statement_func_assign','yacc.py',159),
  ('func_id -> ID','func_id',1,'p_func_id','yacc.py',163),
  ('statement -> procedure_call','statement',1,'p_statement_procedure_call','yacc.py',166),
  ('statement -> compound_statement','statement',1,'p_statement_compound','yacc.py',170),
  ('statement -> IF expression THEN statement else_part','statement',5,'p_statement_if','yacc.py',174),
  ('statement -> FOR ID ASSIGNOP expression TO expression DO statement','statement',8,'p_statement_for','yacc.py',178),
  ('statement -> READ LPAREN variable_list RPAREN','statement',4,'p_statement_read','yacc.py',182),
  ('statement -> WRITE LPAREN expression_list RPAREN','statement',4,'p_statement_write','yacc.py',186),
  ('variable_list -> variable','variable_list',1,'p_variable_list_single','yacc.py',190),
  ('variable_list -> variable_list COM variable','variable_list',3,'p_variable_list_multiple','yacc.py',194),
  ('variable -> ID id_varpart','variable',2,'p_variable','yacc.py',199),
  ('id_varpart -> empty','id_varpart',1,'p_id_varpart_empty','yacc.py',202),
  ('id_varpart -> LBRACKET expression_list RBRACKET','id_varpart',3,'p_id_varpart_with_indices','yacc.py',206),
  ('procedure_call -> ID','procedure_call',1,'p_procedure_call_no_args','yacc.py',210),
  ('procedure_call -> ID LPAREN expression_list RPAREN','procedure_call',4,'p_procedure_call_with_args','yacc.py',214),
  ('else_part -> ELSE statement','else_part',2,'p_else_part','yacc.py',220),
  ('else_part -> empty','else_part',1,'p_else_part_empty','yacc.py',223),
  ('expression_list -> expression','expression_list',1,'p_expression_list_single','yacc.py',226),
  ('expression_list -> expression_list COM expression','expression_list',3,'p_expression_list_multiple','yacc.py',230),
  ('expression -> simple_expression','expression',1,'p_expression_simple','yacc.py',235),
  ('expression -> simple_expression RELOP simple_expression','expression',3,'p_expression_with_relational_op','yacc.py',239),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression_single_term','yacc.py',243),
  ('simple_expression -> simple_expression ADDOP term','simple_expression',3,'p_simple_expression_with_addop','yacc.py',247),
  ('term -> factor','term',1,'p_term_single_factor','yacc.py',252),
  ('term -> term MULOP factor','term',3,'p_term_with_mulop','yacc.py',256),
  ('factor -> num','factor',1,'p_factor_num','yacc.py',261),
  ('factor -> variable','factor',1,'p_factor_variable','yacc.py',265),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expression','yacc.py',269),
  ('factor -> ID LPAREN expression_list RPAREN','factor',4,'p_factor_function_call','yacc.py',273),
  ('factor -> NOT factor','factor',2,'p_factor_not','yacc.py',277),
  ('factor -> ADDOP factor','factor',2,'p_factor_addop','yacc.py',281),
]
